# See https://pre-commit.com for more information
# See https://pre-commit.com/hooks.html for more hooks
repos:

#works
-   repo: local
    hooks:
      - id: check-added-large-files
        entry: pre-commits/check_added_large_files.py
        name: Check for files larger than 5 MB
        language: script
        stages: [pre-commit]
        args: [ "--maxkb=5120" ]

#works
-    repo: local
     hooks:
      - id: end-of-line-fixer
        entry: pre-commits/end_of_line_fixer.py
        name: Check for a blank line at the end of scripts (auto-fixes)
        language: script
        stages: [pre-commit]

#works
-     repo: local
      hooks:
      - id: trailing-whitespace
        entry: pre-commits/remove_whitespace.py
        name: Check for trailing whitespaces (auto-fixes)
        language: script
        stages: [pre-commit]

#works
-     repo: local
      hooks:
      - id: mixed-line-endings
        entry: pre-commits/mixed_line_endings.py
        name: Check for consistent end of line type LF to CRLF to CR (auto-fixes)
        language: script
        stages: [pre-commit]

#works
#if using on different file types, it will need a seperate hook per file type
-   repo: local
    hooks:
      - id: isort
        entry: isort
        name: isort - Sort Python imports (auto-fixes)
        language: system
        types: [python]
        stages: [pre-commit]
        args: [ "--profile", "black", "--filter-files" ]

#works
-   repo: local
    hooks:
      - id: nbstripout
        entry: nbstripout
        name: nbstripout - Strip outputs from notebooks (auto-fixes)
        language: system
        stages: [pre-commit]
        # args:
        #   - --extra-keys
        #   - "metadata.colab metadata.kernelspec cell.metadata.colab cell.metadata.executionInfo cell.metadata.id cell.metadata.outputId"

#works
-   repo: local
    hooks:
      - id: black
        entry: black
        name: black - consistent Python code formatting (auto-fixes)
        language: system
        types: [python]
        stages: [pre-commit]
        args: ["--verbose"]
        exclude: ^playground/

#works
-   repo: local
    hooks:
      - id: flake8
        entry: flake8
        name: flake8 - Python linting
        language: system
        types: [python]
        stages: [pre-commit]


# works in testing
-   repo: local
    hooks:
      - id: detect-secrets
        entry: detect-secrets-hook
        name: detect-secrets - Detect secrets in staged code
        args: [ "--baseline", ".secrets.baseline" ]
        #args: [scan, audit]
        language: system
        types: [python]
        stages: [pre-commit]



# -   repo: local
#     hooks:
#       - id: nbqa-isort
#         entry: nbqa-sort
#         name: nbqa-isort - Sort Python imports (notebooks; auto-fixes)
#         language: system
#         types: [python]
#         args: [ --nbqa-mutate ]
#         additional_dependencies: [ isort==5.8.0 ]

# -   repo: local
#     hooks:
#       - id: nbqa-black
#         entry: nbqa-black
#         name: nbqa-black - consistent Python code formatting (notebooks; auto-fixes)
#         language: system
#         types: [python]
#         args: [ --nbqa-mutate ]
#         additional_dependencies: [ black==21.5b2 ]


      # TODO: Disabled for now until it's clear how to add noqa to specific cells of a Jupyter notebook
      #- id: nbqa-flake8
      #  name: nbqa-flake8 - Python linting (notebooks)
      #  additional_dependencies: [ flake8==3.9.2 ]
